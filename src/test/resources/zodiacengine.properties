#
# Copyright 2012 George Belden
# 
# This file is part of ZodiacEngine.
# 
# ZodiacEngine is free software: you can redistribute it and/or modify it under
# the terms of the GNU General Public License as published by the Free Software
# Foundation, either version 3 of the License, or (at your option) any later
# version.
# 
# ZodiacEngine is distributed in the hope that it will be useful, but WITHOUT ANY
# WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
# A PARTICULAR PURPOSE. See the GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License along with
# ZodiacEngine. If not, see <http://www.gnu.org/licenses/>.
#

grammar.file.location=config/EnglishSentenceCFG.xml
cipher.name=zodiac408

# ---------------------------------------
# User Interface properties
# ---------------------------------------
ui.window.title=Zodiac Cipher Genetic Algorithm
ui.window.width=510
ui.window.height=560
ui.window.startButton.text=Start
ui.window.stopButton.text=Stop

# ---------------------------------------
# Concurrency properties
# ---------------------------------------
# optimal program threadcount seems to be around 8 for my quad-core (i7) laptop
max.threads=4

# The max number of tasks to submit to the executor queue at any given time
# For ZodiacSolutionEvaluator
#executor.queue.limit=10000
# For IncrementalSolutionEvaluator, it should be a multiple of the max.threads property
executor.queue.limit=8

# number of milliseconds to sleep between checking threads' state
thread.monitor.sleep.millis=500

# ---------------------------------------
# Spring taskExecutor Properties
# ---------------------------------------
taskExecutor.corePoolSize=8
taskExecutor.maxPoolSize=8
taskExecutor.queueCapacity=10000

# ---------------------------------------
# Brute force app control properties
# ---------------------------------------
#can be ITERATION or TEMPORAL
application.runtype=TEMPORAL

# 50000000 should complete in around 1 hour on my quad-core (i7) laptop with optimal thread configuration
# 1000000000 should complete in around 20 hours
#solution.engine.iterations=1650000
solution.engine.iterations=4

# Used for the iterative solution generator
solution.generator.improvement_attempts=1000

#This should be the total time spent running the app.
# 10 hours
#engine.runmillis=36000000
# 6 hours
#engine.runmillis=21600000
# 2 hours
#engine.runmillis=7200000
# 1 minute
engine.runmillis=60000

# ---------------------------------------
# Thresholds for persistence to database.
# ---------------------------------------
# Zodiac340
# persistence.total_match.threshold=66
# persistence.unique_match.threshold=48
# persistence.adjacent_match.threshold=60

# Zodiac408
# persistence.total_match.threshold=82
# persistence.unique_match.threshold=53
# persistence.adjacent_match.threshold=57

# If we don't want anything to be persisted
persistence.total_match.threshold=9999
persistence.unique_match.threshold=9999
persistence.adjacent_match.threshold=9999

# ---------------------------------------
# Genetic algorithm properties
# ---------------------------------------
genetic.population.size=1000
genetic.algorithm.lifespan=-1
genetic.algorithm.survivalRate=0.95
genetic.algorithm.mutationRate=0.01
genetic.algorithm.maxMutationsPerChromosome=5
genetic.algorithm.crossoverRate=0.05
genetic.algorithm.maxGenerations=50

genetic.algorithm.tournament.selectionAccuracy=0.9
genetic.algorithm.tournament.groupSize=5

# ---------------------------------------
# English language properties
# ---------------------------------------
language.english.averageWordLength=5.1

# Source: (http://www.math.cornell.edu/~mec/2003-2004/cryptography/subs/frequencies.html)
language.english.frequency.a=0.0812
language.english.frequency.b=0.0149
language.english.frequency.c=0.0271
language.english.frequency.d=0.0432
language.english.frequency.e=0.1202
language.english.frequency.f=0.0230
language.english.frequency.g=0.0203
language.english.frequency.h=0.0592
language.english.frequency.i=0.0731
language.english.frequency.j=0.0010
language.english.frequency.k=0.0069
language.english.frequency.l=0.0398
language.english.frequency.m=0.0261
language.english.frequency.n=0.0695
language.english.frequency.o=0.0768
language.english.frequency.p=0.0182
language.english.frequency.q=0.0011
language.english.frequency.r=0.0602
language.english.frequency.s=0.0628
language.english.frequency.t=0.0910
language.english.frequency.u=0.0288
language.english.frequency.v=0.0111
language.english.frequency.w=0.0209
language.english.frequency.x=0.0017
language.english.frequency.y=0.0211
language.english.frequency.z=0.0007

# ---------------------------------------
# JDBC connection properties
# ---------------------------------------
jdbc.driver=org.postgresql.Driver
jdbc.url=jdbc:postgresql://localhost:5432/Zodiac
jdbc.user=postgres
jdbc.password=postgres
jdbc.connections.initialsize=1
# There isn't currently any DB activity during program execution, so one thread is all we need
jdbc.connections.maxactive=1

# ---------------------------------------
# Thermal control properties
# ---------------------------------------
app.commands.before=powercfg -setacvalueindex SCHEME_CURRENT SUB_PROCESSOR PROCTHROTTLEMAX 99,powercfg -setactive SCHEME_CURRENT
app.commands.after=powercfg -setacvalueindex SCHEME_CURRENT SUB_PROCESSOR PROCTHROTTLEMAX 100,powercfg -setactive SCHEME_CURRENT