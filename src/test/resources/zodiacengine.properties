grammar.file.location=config/EnglishSentenceCFG.xml
cipher.name=zodiac340

# optimal program threadcount seems to be around 8 for my quad-core (i7) laptop
max.threads=8

#can be ITERATION or TEMPORAL
application.runtype=TEMPORAL

# 50000000 should complete in around 1 hour on my quad-core (i7) laptop with optimal thread configuration
# 1000000000 should complete in around 20 hours
#This should be the total number of iterations to run the app.  It should be a factor of (generator.iterations + evaluator.iterations)
#Instead we could just make this a number of 'loops' to do both generation and evaluation
solution.engine.iterations=1650000
#This should be the total number of iterations to generate raw solutions until persisting the 'best' to database
solution.generator.iterations=1650000
#This should be the total number of iterations to mutate on persisted solutions and trying to improve them
solution.evaluator.iterations=1650000

#one minute should complete about 1650000 iterations on my quad-core (i7) laptop with optimal thread configuration
#21600000 milliseconds = 6 hours
#This should be the total time spent running the app.  It should be a factor of (generator.runmillis + evaluator.runmillis)
#Instead we could just make this a number of 'loops' to do both generation and evaluation
# 7200000 milliseconds = 2 hours
engine.runmillis=3600000

# number of milliseconds to sleep between checking threads' state
thread.monitor.sleep.millis=500

# Thresholds for persistence to database.
# Confidence of 66 isn't being found after 20 million solutions
# persistence.confidence.threshold=66
persistence.confidence.threshold=500
# Unique matches of 48 isn't being found after 20 million solutions
# persistence.unique.threshold=48
persistence.unique.threshold=500

# JDBC connection properties
jdbc.driver=org.postgresql.Driver
jdbc.url=jdbc:postgresql://localhost:5432/Zodiac
jdbc.user=postgres
jdbc.password=postgres
jdbc.connections.initialsize=1
# There isn't currently any DB activity during program execution, so one thread is all we need
jdbc.connections.maxactive=1